/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eam.gui_compilador.Views;

import eam.analizador_lexico.Controllers.LexicalAnalyzerController;
import eam.analizador_semantico.Controllers.SemanticAnalyzerController;
import eam.analizador_sintactico.Models.Statements.Structure.Statement;
import eam.analizador_semantico.Exceptions.SemanticError;
import eam.analizador_sintactico.Models.Exceptions.SyntaxError;
import eam.analizador_sintactico.Models.SyntacticAnalyzer;
import eam.gui_compilador.util.Tools;
import java.awt.Font;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultTreeModel;
import org.fife.ui.rsyntaxtextarea.AbstractTokenMakerFactory;
import org.fife.ui.rsyntaxtextarea.TokenMakerFactory;

/**
 *
 * @author daryl
 */
public class FrmMain extends javax.swing.JFrame {

    private final LexicalAnalyzerController lexAnalyzerController;
    private SyntacticAnalyzer syntacticAnalyzer;
    private SemanticAnalyzerController semanticAnalyzerController;
    private String routeFile;

    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();

        this.routeFile = "";

        AbstractTokenMakerFactory atmf = (AbstractTokenMakerFactory) TokenMakerFactory.getDefaultInstance();
        atmf.putMapping("text/solar", "eam.gui_compilador.Models.SolarTokenMaker");
        this.txtCodeEditor.setSyntaxEditingStyle("text/solar");
        this.txtCodeEditor.setCodeFoldingEnabled(true);
        this.txtCodeEditor.setTabSize(2);
        this.txtCodeEditor.setFont(new Font("Consolas", Font.PLAIN, 12));
        this.lexAnalyzerController = new LexicalAnalyzerController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlContainer = new javax.swing.JPanel();
        pnlEditorContainer = new javax.swing.JPanel();
        rTextScrollPane1 = new org.fife.ui.rtextarea.RTextScrollPane();
        txtCodeEditor = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLexemes = new javax.swing.JTable();
        btnOpenFile = new javax.swing.JButton();
        btnAnalyze = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        trLexemes = new javax.swing.JTree();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblVariables = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblFuntions = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        btnClean = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1240, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pnlEditorContainer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCodeEditor.setColumns(20);
        txtCodeEditor.setRows(5);
        rTextScrollPane1.setViewportView(txtCodeEditor);

        javax.swing.GroupLayout pnlEditorContainerLayout = new javax.swing.GroupLayout(pnlEditorContainer);
        pnlEditorContainer.setLayout(pnlEditorContainerLayout);
        pnlEditorContainerLayout.setHorizontalGroup(
            pnlEditorContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rTextScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );
        pnlEditorContainerLayout.setVerticalGroup(
            pnlEditorContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rTextScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tblLexemes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lexema", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(tblLexemes);

        btnOpenFile.setBackground(new java.awt.Color(0, 255, 0));
        btnOpenFile.setText("Abrir Archivo");
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileActionPerformed(evt);
            }
        });

        btnAnalyze.setBackground(new java.awt.Color(0, 102, 255));
        btnAnalyze.setForeground(new java.awt.Color(255, 255, 255));
        btnAnalyze.setText("Analizar");
        btnAnalyze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(102, 102, 255));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlContainerLayout = new javax.swing.GroupLayout(pnlContainer);
        pnlContainer.setLayout(pnlContainerLayout);
        pnlContainerLayout.setHorizontalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlEditorContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addComponent(btnOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
                    .addComponent(btnAnalyze, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlContainerLayout.setVerticalGroup(
            pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContainerLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addGroup(pnlContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOpenFile)
                            .addComponent(btnSave))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlEditorContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlContainerLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnalyze)))
                .addGap(13, 13, 13))
        );

        jTabbedPane1.addTab("Analizador Lexico", pnlContainer);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        trLexemes.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(trLexemes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1215, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Analizador Sintactico", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Variables"), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        tblVariables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIPO DE DATO", "IDENTIFICADOR", "VALOR", "CONTEXTO", "CONTEXTO PADRE"
            }
        ));
        jScrollPane3.setViewportView(tblVariables);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1201, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Funciones"), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        tblFuntions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIPO DE RETORNO", "IDENTIFICADOR", "PARAMETROS", "CONTEXTO"
            }
        ));
        jScrollPane5.setViewportView(tblFuntions);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Analizador Semantico", jPanel3);

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnClean.setText("Limpiar");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });
        jPanel7.add(btnClean, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 10, -1, -1));

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane6.setViewportView(txtOutput);

        jPanel7.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 1230, 530));

        jTabbedPane1.addTab("OUTPUT", jPanel7);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileActionPerformed
        JFileChooser filechooser = new JFileChooser(".");
        filechooser.setFileFilter(new FileNameExtensionFilter("solar files (.sol)", "sol"));
        int valueSelection = filechooser.showOpenDialog(this);

        if (valueSelection == JFileChooser.APPROVE_OPTION) {
            try {
                String fileRoute = filechooser.getSelectedFile().getAbsolutePath();
                this.routeFile = fileRoute;
                this.txtCodeEditor.setText(this.txtCodeEditor.getText() + Tools.readFile(fileRoute));
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al cargar el archivo " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnOpenFileActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        this.saveCode("Se ha guardado el codigo correctamente", "Error al guardar el codigo ");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
        if (this.routeFile.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe guardar el codigo antes de ejecutarlo");
            this.saveCode("Se ha guardado el codigo correctamente", "Error al guardar el codigo ");
        }
        this.tblLexemes.setModel(this.lexAnalyzerController.analyze(this.txtCodeEditor.getText().replaceAll("\t", "")));
        try {
            this.syntacticAnalyzer = new SyntacticAnalyzer(LexicalAnalyzerController.lexemes);
            Statement compilationUnit = this.syntacticAnalyzer.analyze();
            this.trLexemes.setModel(new DefaultTreeModel(compilationUnit));
            this.semanticAnalyzerController = new SemanticAnalyzerController(compilationUnit);
            try {
                this.semanticAnalyzerController.analyze();
                this.tblVariables.setModel(this.semanticAnalyzerController.getVariables());
                this.tblFuntions.setModel(this.semanticAnalyzerController.getFunctions());
                this.txtOutput.setText(this.txtOutput.getText() + this.semanticAnalyzerController.execute(Tools.changeExtFile(this.routeFile, ".sol", ".js")));
                JOptionPane.showMessageDialog(this, "Codigo ejecutado correctamente!!!");
            } catch (SemanticError | SyntaxError | IOException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            this.saveCode(null, null);
        } catch (SyntaxError e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnAnalyzeActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        this.txtOutput.setText("");
    }//GEN-LAST:event_btnCleanActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyze;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlContainer;
    private javax.swing.JPanel pnlEditorContainer;
    private org.fife.ui.rtextarea.RTextScrollPane rTextScrollPane1;
    private javax.swing.JTable tblFuntions;
    private javax.swing.JTable tblLexemes;
    private javax.swing.JTable tblVariables;
    private javax.swing.JTree trLexemes;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea txtCodeEditor;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables

    private void saveCode(String mensajeExito, String mensajeError) {
        JFileChooser filechooser = new JFileChooser(".");
        filechooser.setFileFilter(new FileNameExtensionFilter("solar files (.sol)", "sol"));
        int valueSelection = JFileChooser.APPROVE_OPTION;

        String fileRoute = "";

        if (this.routeFile.isEmpty()) {
            valueSelection = filechooser.showOpenDialog(this);
        } else {
            fileRoute = this.routeFile;
        }

        if (valueSelection == JFileChooser.APPROVE_OPTION) {
            if (fileRoute.isEmpty()) {
                fileRoute = filechooser.getSelectedFile().getAbsolutePath();
            }
            this.routeFile = fileRoute;
            try {
                Tools.writeInFile(fileRoute, this.txtCodeEditor.getText());
                if (mensajeExito != null) {
                    JOptionPane.showMessageDialog(this, mensajeExito);
                }
            } catch (IOException ex) {
                if (mensajeError != null) {
                    JOptionPane.showMessageDialog(this, mensajeError + ex.getMessage());
                }
            }
        }
    }
}
